name: Deploy

on:
  workflow_run:
    workflows:
      - "Test"
    branches:
      - main
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: deployment
  cancel-in-progress: true

jobs:
  build:
    name: Build production image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          pull: true
          push: true
          tags: ghcr.io/${{ github.repository }}-frontend:${{ github.sha }}
          target: web-production
      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          pull: true
          push: true
          tags: ghcr.io/${{ github.repository }}-app:${{ github.sha }}
          target: ruby-app

  deploy:
    name: Deploy to production server
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: rickselby-web-server/actions/server-certificate@main
        with:
          CA: ${{ secrets.LINODE_CA }}
          CLIENT_CERT: ${{ secrets.LINODE_CLIENT_CERT }}
          CLIENT_KEY: ${{ secrets.LINODE_CLIENT_KEY }}
      - uses: rickselby-web-server/actions/docker-compose-deploy@main
        with:
          COMPOSE_FILE_PATH: docker/production.yml
          CONNECT_CONTAINERS: nginx-proxy,postgres
          STACK_NAME: ciclos-major-rails
        env:
          CONTAINER_FRONTEND_PROD: ghcr.io/${{ github.repository }}-frontend:${{ github.sha }}
          CONTAINER_BACKEND_PROD: ghcr.io/${{ github.repository }}-app:${{ github.sha }}
          DOCKER_HOST: ${{ secrets.LINODE_HOST }}
          DOCKER_TLS_VERIFY: 1
          LETSENCRYPT_EMAIL: ${{ secrets.LETSENCRYPT_EMAIL }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
