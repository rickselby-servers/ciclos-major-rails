# frozen_string_literal: true

require "rails_helper"

<% output_attributes = attributes.reject{|attribute| [:datetime, :timestamp, :time, :date].index(attribute.type) } -%>
RSpec.describe "<%= ns_table_name %>/_<%= singular_table_name %>" do
  let(:<%= singular_table_name %>) { create :<%= singular_table_name %> }
  let(:locals) { { <%= singular_table_name %>: } }

<% output_attributes.each_with_index do |attribute, attribute_index| -%>
  <%- name = attribute.respond_to?(:column_name) ? attribute.column_name : attribute.name -%>
  it { is_expected.to have_content <%= singular_table_name %>.<%= name %> }
<% end -%>

  it { is_expected.to have_no_link href: <%= edit_helper %> }

  context "with html" do
    let(:<%= singular_table_name %>) { create :<%= singular_table_name %>, :html }

    it { is_expected.to have_css "strong", text: strip_tags(<%= singular_table_name %>.answer) }
  end

  context "when logged in", :logged_in do
    it { is_expected.to have_link href: <%= edit_helper %> }
  end
end
